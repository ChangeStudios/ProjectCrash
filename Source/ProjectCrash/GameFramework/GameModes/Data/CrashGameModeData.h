// Copyright Samuel Reitich 2024.

#pragma once

#include "CoreMinimal.h"
#include "Engine/DataAsset.h"
#include "CrashGameModeData.generated.h"

class UCommonActivatableWidget;
class UGA_Death;
class UUserInterfaceData;

/**
 * Data defining the properties of a gameplay-oriented game mode (as opposed to an interface-only game mode). Defines
 * data like players' starting lives or the UI data to use.
 */
UCLASS(BlueprintType, Const, Meta = (DisplayName = "Game Mode Data"))
class PROJECTCRASH_API UCrashGameModeData : public UPrimaryDataAsset
{
	GENERATED_BODY()

	// Construction.

public:

	/** Default constructor. */
	UCrashGameModeData(const FObjectInitializer& ObjectInitializer);



	// Match.

public:

	/**
	 * The maximum amount of time for which this match will be played. When this time is reached, the game mode's
	 * overtime will begin. If the game mode does not implement overtime, the match will be ended with the game mode's
	 * tie-breaking rules.
	 *
	 * Setting this to 0.0 disables this time limit.
	 */
	UPROPERTY(EditDefaultsOnly, BlueprintReadOnly, Category = "Match", DisplayName = "Maximum Match Time")
	float MaximumMatchTime;

	/**
	 * The maximum amount of time for which overtime will be played. When this time is reached, the match will be
	 * ended with the game mode's tie-breaking rules.
	 *
	 * Setting this to 0.0 disables overtime for this game mode.
	 */
	UPROPERTY(EditDefaultsOnly, BlueprintReadOnly, Category = "Match", DisplayName = "Maximum Overtime")
	float MaximumOvertimeTime;



	// Teams.

public:

	/**
	 * The number of teams required for the match. The game will not automatically start until there are this many
	 * teams, each with TeamSize players.
	 *
	 * This is overridden in custom games, which are started manually, regardless of the number of teams.
	 */
	UPROPERTY(EditDefaultsOnly, BlueprintReadOnly, Category = "Teams", DisplayName = "Number of Teams")
	uint8 NumTeams;

	/**
	 * The number of players required on each team for the match. The game will not automatically start until there are
	 * NumTeams teams with TeamSize players each.
	 *
	 * This is overridden in custom games, which are started manually, regardless of the teams' sizes.
	 */
	UPROPERTY(EditDefaultsOnly, BlueprintReadOnly, Category = "Teams", DisplayName = "Team Size")
	uint8 TeamSize;



	// Lives.

public:

	/** The number of lives with which players start games. */
	UPROPERTY(EditDefaultsOnly, BlueprintReadOnly, Category = "Lives", DisplayName = "Starting Player Lives", Meta = (UIMin = 1, UIMax = 255))
	uint8 StartingLives;



	// Death.

public:

	/** The default death ability to use in this game mode. This will be activated on ASCs when their avatars die via
	 * running out of health. */
	UPROPERTY(EditDefaultsOnly, Category = "Death")
	TSubclassOf<UGA_Death> DefaultDeathAbility;

	/** The amount of time to wait between StartDeath and FinishDeath. */
	UPROPERTY(EditDefaultsOnly, Category = "Death", Meta = (Units = "seconds"))
	float DeathDuration;



	// UI.

public:

	/** User interface data that defines the UI generated by this game mode. */
	UPROPERTY(EditDefaultsOnly, Category = "User Interface")
	TObjectPtr<UUserInterfaceData> UIData;
};
